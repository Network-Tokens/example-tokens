#!/usr/bin/env python3

from binascii import unhexlify
from cbor2 import dumps, loads
from cose import SymmetricKey, Sign1Message, CoseAlgorithms, KeyOps, \
    CoseHeaderKeys, EC2, CoseEllipticCurves
from cose.keys.cosekey import CoseKey, KTY
from itertools import zip_longest
import socket
import struct
import time


ONE_WEEK = 60 * 60 * 24 * 7


def group(n, iterable, fillvalue=None): 
    args = [iter(iterable)] * n
    return zip_longest(fillvalue=fillvalue, *args)

def dump_c_hex(data):
    return ', '.join([''.join(['0x', *x]) for x in group(2, data.hex())])


pub = '825820a71c9819f57f1af3fddd3ee7143cdb9605c10f941e09683f3ab2fc173a7fef6658209e0a5a4233c597da563090a82f49ce23533f5d44902a5611c1491c9bf8fea17e'
token = 'd28443a10126a05829a4636269701a0a640065636578701a60884a9f63656e766364657664746965726866726f6e74656e6458405b9724ead9e2575f8480b8d93994ee6f274c053bbdae0251da96257d1950e70ce9fd680e87f2104c9e2068a8131686a5563335162a257164b6500f15a0d60c3a'

pubkey_decoded = loads(unhexlify(pub))
pubkey = EC2.from_cose_key_obj({
    CoseKey.Common.KTY: KTY.EC2,
    CoseKey.Common.ALG: CoseAlgorithms.ES256,
    EC2.EC2Prm.X: pubkey_decoded[0],
    EC2.EC2Prm.Y: pubkey_decoded[1],
})

decoded = Sign1Message.decode(unhexlify(token))
valid = decoded.verify_signature(pubkey)
payload = loads(decoded.payload)
payload['bip'] = socket.inet_ntoa(struct.pack("!I", payload['bip']))

print("=========================================================")
print("PUB:     %s" % pub)
print("TOKEN:   %s" % token)
print("VALID:   %s" % valid)
print("PAYLOAD: %s" % payload)
print("LEN:     %s" % len(unhexlify(token)))
print("=========================================================")
